import{createServer as c}from"net";function f(e,t){const n=Buffer.from(t??"","utf8"),o=Buffer.alloc(3+n.length);return o.writeUInt8(e,0),o.writeUInt16BE(n.length,1),n.copy(o,3),o}function p(e){const t=e.readUInt8(0),n=e.readUInt16BE(1);return{type:t,length:n,payload:e.slice(3,3+n).toString()}}class Socket{constructor(e,t){this.native=e,this.pool=t,this.handlers={}}data(e){this.handlers.data=e}send(e){this.native.write(f(3,e))}emit(e){this.pool.forEach((t=>t.native.write(f(3,e))))}broadcast(e){this.pool.forEach((t=>t!==this&&t.native.write(f(3,e))))}}let a;function createServer(e={ping:{active:!1,interval:0,ping:""},logs:{}}){const t=new Set,n=c((n=>{e.logs.connect&&console.log(e.logs.connect);const o=new Socket(n,t);t.add(o),a&&a(o);let r,c=Buffer.alloc(0);n.on("data",(e=>{for(c=Buffer.concat([c,e]);c.length>=3;){const e=c.readUInt16BE(1);if(c.length<3+e)break;const t=p(c);o.handlers.data?.(t),c=c.slice(3+e)}})),n.on("close",(()=>{clearInterval(r),t.delete(o)})),n.on("error",(t=>{e.logs.disconnect&&console.log(e.logs.disconnect)})),e.ping.active&&(r=setInterval((()=>{n.destroyed||(n.write(f(1)),e.ping.ping&&console.log(e.ping.ping))}),e.ping.interval))}));return{listen:n.listen.bind(n),TCP:e=>a=e}}module.exports = {createServer};